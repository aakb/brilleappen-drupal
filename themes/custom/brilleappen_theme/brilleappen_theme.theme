<?php

require_once __DIR__ . '/vendor/autoload.php';

use Endroid\QrCode\QrCode;
use Drupal\Core\Url;
use Drupal\node\Entity\Node;

/**
 * @file
 * Functions to support theming in the Brilleappen theme.
 */

/**
 * Implements hook_preprocess_node().
 *
 * Calls node type specific preprocess functions, e.g. "brilleappen_theme_preprocess_node_event" for nodes of type event.
 *
 */
function brilleappen_theme_preprocess_node(array &$variables) {
  $function = __FUNCTION__ . '_'. $variables['node']->getType();

  if (function_exists($function)) {
    $function($variables);
  }
}

function brilleappen_theme_preprocess_node_gg_event(array &$variables) {
  $event = $variables['node'];
  $url = Url::fromRoute('entity.node.canonical', [ 'node' => $event->nid->value ], [
    'absolute' => TRUE,
    'query' => [ '_format' => 'json' ],
  ]);
  $data = [
    'url' => $url->toString(),
  ];

  $qrCodeData = is_string($data) ? $data : json_encode($data);

  $qrCode = new QrCode();

  $qrCode
    ->setText($qrCodeData)
    ->setSize(800)
    ->setPadding(40)
    ->setErrorCorrection('high')
    ->setForegroundColor(array('r' => 0, 'g' => 0, 'b' => 0, 'a' => 0))
    ->setBackgroundColor(array('r' => 255, 'g' => 255, 'b' => 255, 'a' => 0));

  $variables['qr_code'] = [
    'self' => $qrCode,
    'data' => $data,
    'data_text' => $qrCodeData,
    'data_uri' => $qrCode->getDataUri(),
  ];

  $query = \Drupal::entityQuery('node')
         ->condition('type', 'gg_event', '=')
         ->condition('field_gg_parent', $event->nid->value, '=')
         ->sort('created', 'ASC');
  $entityIds = $query->execute();

  if ($entityIds) {
    $variables['events'] = Node::loadMultiple($entityIds);
  }

  $mediaView = \Drupal\views\Views::getView('gg_event_media');
  if ($mediaView) {
    $variables['event_media_view'] = $mediaView->buildRenderable(); //('gg_event_media_embed');
  }
}
